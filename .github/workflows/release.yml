name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt pyinstaller

      - name: Build binary
        run: |
          pyinstaller --onefile --clean --noupx main.py -n cper

      - name: Rename binary by OS
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv dist/cper.exe dist/cper-windows.exe
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            mv dist/cper dist/cper-linux
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            mv dist/cper dist/cper-macos
          fi

      - name: Compress binary (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update && sudo apt-get install -y zip
          cd dist
          zip cper-linux.zip cper-linux

      - name: Compress binary (macOS)
        if: runner.os == 'macOS'
        run: |
          cd dist
          zip cper-macos.zip cper-macos

      - name: Compress binary (Windows)
        if: runner.os == 'Windows'
        run: |
          cd dist
          powershell Compress-Archive -Path cper-windows.exe -DestinationPath cper-windows.zip

      - name: Upload zipped binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
