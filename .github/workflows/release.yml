name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt pyinstaller pyfiglet

      - name: Build binary
        shell: bash
        run: |
          # Determine PyFiglet fonts path
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            FONT_PATH=$(python -c "import os, pyfiglet; print(os.path.join(os.path.dirname(pyfiglet.__file__), 'fonts'))")
            pyinstaller --onefile --clean --noupx --add-data "$FONT_PATH;pyfiglet/fonts" main.py -n cper
            mv dist/cper.exe dist/cper-windows.exe
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            FONT_PATH=$(python3 -c "import os, pyfiglet; print(os.path.join(os.path.dirname(pyfiglet.__file__), 'fonts'))")
            pyinstaller --onefile --clean --noupx --add-data "$FONT_PATH:pyfiglet/fonts" main.py -n cper
            mv dist/cper dist/cper-linux
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            FONT_PATH=$(python3 -c "import os, pyfiglet; print(os.path.join(os.path.dirname(pyfiglet.__file__), 'fonts'))")
            pyinstaller --onefile --clean --noupx --add-data "$FONT_PATH:pyfiglet/fonts" main.py -n cper
            mv dist/cper dist/cper-macos
          fi

      - name: Compress binary
        shell: bash
        run: |
          cd dist
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            powershell Compress-Archive -Path cper-windows.exe -DestinationPath cper-windows.zip
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            zip cper-linux.zip cper-linux
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            zip cper-macos.zip cper-macos
          fi

      - name: Upload zipped binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
